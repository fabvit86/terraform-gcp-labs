# Task 1. Create multiple web server instances

# create VM instances (repeat for all instances)
gcloud compute instances create web1 --image-family=debian-11 --image-project=debian-cloud --tags=network-lb-tag --zone=us-east4-c --machine-type=e2-small --metadata-from-file=startup-script=startup_script_1.txt
gcloud compute instances create web2 --image-family=debian-11 --image-project=debian-cloud --tags=network-lb-tag --zone=us-east4-c --machine-type=e2-small --metadata-from-file=startup-script=startup_script_2.txt
gcloud compute instances create web3 --image-family=debian-11 --image-project=debian-cloud --tags=network-lb-tag --zone=us-east4-c --machine-type=e2-small --metadata-from-file=startup-script=startup_script_3.txt

# create firewall rules
gcloud compute firewall-rules create www-firewall-network-lb --allow=tcp:80 --target-tags=network-lb-tag --source-ranges=0.0.0.0/0


# Task 2. Configure the load balancing service

# create health check for VMs target pool
gcloud compute http-health-checks create basic-check

# create Static external IP
gcloud compute addresses create network-lb-ip-1 --region=us-east4

# create target pool
gcloud compute target-pools create www-pool --region=us-east4 --http-health-check basic-check

# add instances to the pool
gcloud compute target-pools add-instances www-pool --instances="web1,web2,web3"  --instances-zone=us-east4-c

# create forwarding rule
gcloud compute forwarding-rules create www-rule --region us-east4 --ports 80 --address network-lb-ip-1 --target-pool www-pool


# Task 3. Create an HTTP load balancer

# create VM instance template for HTTP load balancer backend
gcloud compute instance-templates create lb-backend-template --region=us-east4 --network=default --tags=allow-health-check --machine-type=e2-medium --image-family=debian-11 --image-project=debian-cloud --metadata-from-file=startup-script=startup_script_http_lb.txt

# create MIG for HTTP lb backend
gcloud compute instance-groups managed create lb-backend-group --template=lb-backend-template --size=2 --zone=us-east4-c

# create firewall rule for health check
gcloud compute firewall-rules create fw-allow-health-check --network=default --allow=tcp:80 --direction=ingress --source-ranges="130.211.0.0/22,35.191.0.0/16" --target-tags=allow-health-check

# create Static external IP for HTTP load balancer
gcloud compute addresses create lb-ipv4-1 --ip-version=IPV4 --global

# create health check for HTTP load balancer backend service
gcloud compute health-checks create http http-basic-check --port=80

# create HTTP load balancer backend service
gcloud compute backend-services create web-backend-service --protocol=HTTP --port-name=http --health-checks=http-basic-check --global

# add a backend to the HTTP load balancer backend service
gcloud compute backend-services add-backend web-backend-service --instance-group=lb-backend-group --instance-group-zone=us-east4-c --global

# create URL maps which map HTTP request URLs to the HTTP load balancer backend service
gcloud compute url-maps create web-map-http --default-service web-backend-service

# create target HTTP proxy that points to the URL map
gcloud compute target-http-proxies create http-lb-proxy --url-map web-map-http

# create forwarding rule for the HTTP proxy
gcloud compute forwarding-rules create http-content-rule --address=lb-ipv4-1 --global --target-http-proxy=http-lb-proxy --ports=80
